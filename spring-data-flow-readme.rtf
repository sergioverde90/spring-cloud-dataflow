{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh15240\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 1\'ba Necesitamos un server donde desplegar la interfaz web ( se entiende que es opcional )\
2\'ba Necesitamos una Shell para poder registrar los diferentes componentes\
3\'ba Necesitamos un Source, nuestra fuente de datos a procesar. Tiene varios conectores out of the box, como Kafka, RabbitMQ, etc.\
4\'ba Opcionalmente podemos declarar un Processor, que ser\'e1 el encargado de procesar los datos que vienen del Source (paso 3\'ba)\
5\'ba Necesitamos un Sink, que ser\'e1 el \'faltimo paso del Pipeline donde podremos persistir o hacer algo con el resultado del Source o del Profesor (si lo hemos usado)\
6\'ba Necesitamos registrar los 3 componentes d\'e1ndoles un nombre, que despu\'e9s usaremos para construir el Pipeline\
7\'ba Una vez registrados los componentes lanzamos el stream \
8\'ba Revisar los logs del server para ver c\'f3mo se van procesando los datos\
\
FUENTE:\
\
{\field{\*\fldinst{HYPERLINK "http://www.baeldung.com/spring-cloud-data-flow-stream-processing"}}{\fldrslt http://www.baeldung.com/spring-cloud-data-flow-stream-processing}}\
{\field{\*\fldinst{HYPERLINK "http://engineering.pivotal.io/post/spring-cloud-data-flow-sink/"}}{\fldrslt http://engineering.pivotal.io/post/spring-cloud-data-flow-sink/}}\
{\field{\*\fldinst{HYPERLINK "http://start-scs.cfapps.io/"}}{\fldrslt http://start-scs.cfapps.io/}}\
https://github.com/altfatterz/spring-cloud-dataflow-streaming-example\
\
INPUTS:\
\
Registrar los componentes del pipeline (previamente mvn clean install de cada uno)\
\
dataflow:>app register --name time-source --type source --uri maven://com.sergio.example:spring-dataflow-local-source:1.0-SNAPSHOT\
Successfully registered application 'source:time-source'\
dataflow:>app register --name time-processor --type processor --uri maven://com.sergio.example:spring-dataflow-local-processor:1.0-SNAPSHOT\
Successfully registered application 'processor:time-processor'\
dataflow:>app register --name logging-sink --type sink --uri maven://com.sergio.example:spring-dataflow-local-sink:1.0-SNAPSHOT\
Successfully registered application 'sink:logging-sink'\
\
Crear los streams\
\
dataflow:>stream create --name time-to-log --definition 'time-source | time-processor | logging-sink'\
Created new stream 'time-to-log'\
dataflow:>stream deploy --name time-to-log\
Deployment request has been sent for stream 'time-to-log'\
\
OUTPUTS:\
\
Output en el server despu\'e9s de la creaci\'f3n (que no despliegue) de los streams:\
\
2018-02-16 08:24:49.741  INFO 28898 --- [nio-9393-exec-5] .s.c.d.s.s.i.AppDeploymentRequestCreator : Creating resource with [maven://com.sergio.example:spring-dataflow-local-sink:1.0-SNAPSHOT] for application [logging-sink]\
2018-02-16 08:24:50.009  INFO 28898 --- [nio-9393-exec-5] .s.c.d.s.s.i.AppDeploymentRequestCreator : Creating resource with [maven://com.sergio.example:spring-dataflow-local-processor:1.0-SNAPSHOT] for application [time-processor]\
2018-02-16 08:24:50.150  INFO 28898 --- [nio-9393-exec-5] .s.c.d.s.s.i.AppDeploymentRequestCreator : Creating resource with [maven://com.sergio.example:spring-dataflow-local-source:1.0-SNAPSHOT] for application [time-source]\
2018-02-16 08:24:50.267  INFO 28898 --- [nio-9393-exec-5] o.s.c.d.s.s.AppDeployerStreamDeployer    : Deploying application named [logging-sink] as part of stream named [time-to-log] with resource URI [maven://com.sergio.example:spring-dataflow-local-sink:jar:1.0-SNAPSHOT]\
2018-02-16 08:24:50.621  INFO 28898 --- [nio-9393-exec-5] o.s.c.d.spi.local.LocalAppDeployer       : Deploying app with deploymentId time-to-log.logging-sink instance 0.\
   Logs will be in /var/folders/gd/js1v70wn1hx9m09hdvc74m9r0000gn/T/spring-cloud-dataflow-7903069627128289748/time-to-log-1518765890269/time-to-log.logging-sink\
2018-02-16 08:24:50.623  INFO 28898 --- [nio-9393-exec-5] o.s.c.d.s.s.AppDeployerStreamDeployer    : Deploying application named [time-processor] as part of stream named [time-to-log] with resource URI [maven://com.sergio.example:spring-dataflow-local-processor:jar:1.0-SNAPSHOT]\
2018-02-16 08:24:50.630  INFO 28898 --- [nio-9393-exec-5] o.s.c.d.spi.local.LocalAppDeployer       : Deploying app with deploymentId time-to-log.time-processor instance 0.\
   Logs will be in /var/folders/gd/js1v70wn1hx9m09hdvc74m9r0000gn/T/spring-cloud-dataflow-7903069627128289748/time-to-log-1518765890624/time-to-log.time-processor\
2018-02-16 08:24:50.631  INFO 28898 --- [nio-9393-exec-5] o.s.c.d.s.s.AppDeployerStreamDeployer    : Deploying application named [time-source] as part of stream named [time-to-log] with resource URI [maven://com.sergio.example:spring-dataflow-local-source:jar:1.0-SNAPSHOT]\
2018-02-16 08:24:50.638  INFO 28898 --- [nio-9393-exec-5] o.s.c.d.spi.local.LocalAppDeployer       : Deploying app with deploymentId time-to-log.time-source instance 0.\
   Logs will be in /var/folders/gd/js1v70wn1hx9m09hdvc74m9r0000gn/T/spring-cloud-dataflow-7903069627128289748/time-to-log-1518765890631/time-to-log.time-source\
\
\
\
\
}