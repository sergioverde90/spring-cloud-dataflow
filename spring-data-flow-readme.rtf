{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 1\'ba Necesitamos un server donde desplegar la interfaz web ( se entiende que es opcional )\
2\'ba Necesitamos una Shell para poder registrar los diferentes componentes\
3\'ba Necesitamos un Source, nuestra fuente de datos a procesar. Tiene varios conectores out of the box, como Kafka, RabbitMQ, etc.\
4\'ba Opcionalmente podemos declarar un Processor, que ser\'e1 el encargado de procesar los datos que vienen del Source (paso 3\'ba)\
5\'ba Necesitamos un Sink, que ser\'e1 el \'faltimo paso del Pipeline donde podremos persistir o hacer algo con el resultado del Source o del Profesor (si lo hemos usado)\
6\'ba Necesitamos registrar los 3 componentes d\'e1ndoles un nombre, que despu\'e9s usaremos para construir el Pipeline\
7\'ba Una vez registrados los componentes lanzamos el stream \
8\'ba Revisar los logs del server para ver c\'f3mo se van procesando los datos\
\
FUENTE:\
\
{\field{\*\fldinst{HYPERLINK "http://www.baeldung.com/spring-cloud-data-flow-stream-processing"}}{\fldrslt http://www.baeldung.com/spring-cloud-data-flow-stream-processing}}}